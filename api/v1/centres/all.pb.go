// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: bnk.to/core/api/v1/centres/all.proto

// Package centres allows retrieving centres information.

package centres

import (
	reflect "reflect"
	sync "sync"

	v1 "bnk.to/core/api/v1"
	org "bnk.to/core/api/v1/org"
	_ "github.com/xo/ecosystem/proto/xo"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Centre is a common meeting area that credit officers and the individual
// and group clients go to. Each centre is assigned to a branch (a branch can
// have multiple centres) and might have a specific meeting day and location.
type Centre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CentreID is the ID of the centre.
	CentreID string `protobuf:"bytes,1,opt,name=CentreID,json=centre_id,proto3" json:"centre_id,omitempty"`
	// Info is the contact information of the branch.
	Info *v1.ContactInfo `protobuf:"bytes,2,opt,name=Info,json=info,proto3" json:"info,omitempty"`
	// Notes is extra human-readable notes about this centre.
	Notes string `protobuf:"bytes,3,opt,name=Notes,json=notes,proto3" json:"notes,omitempty"`
	// AssignedBranchID is the ID of the branch this centre is assigned to.
	AssignedBranchID string `protobuf:"bytes,4,opt,name=AssignedBranchID,json=assigned_branch_id,proto3" json:"assigned_branch_id,omitempty"`
	// MeetingDay is the day of the week when repayments are collected,
	// influences repayments schedule, and all repayments are update to this
	// day of the week.
	MeetingDay org.Day `protobuf:"varint,5,opt,name=MeetingDay,json=meeting_day,proto3,enum=openbank.core.v1.org.Day" json:"meeting_day,omitempty"`
	// State is the state of the centre.
	State v1.State `protobuf:"varint,6,opt,name=State,json=state,proto3,enum=openbank.core.v1.State" json:"state,omitempty"`
	// CreateTime is the time the centre was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=CreateTime,json=create_time,proto3" json:"create_time,omitempty"`
	// UpdateTime is the time the centre is last modified.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=UpdateTime,json=update_time,proto3" json:"update_time,omitempty"`
	// Fields is the custom fields for the branch.
	Fields *structpb.Value `protobuf:"bytes,9,opt,name=Fields,json=fields,proto3" json:"fields,omitempty"`
}

func (x *Centre) Reset() {
	*x = Centre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Centre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Centre) ProtoMessage() {}

func (x *Centre) ProtoReflect() protoreflect.Message {
	mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Centre.ProtoReflect.Descriptor instead.
func (*Centre) Descriptor() ([]byte, []int) {
	return file_bnk_to_core_api_v1_centres_all_proto_rawDescGZIP(), []int{0}
}

func (x *Centre) GetCentreID() string {
	if x != nil {
		return x.CentreID
	}
	return ""
}

func (x *Centre) GetInfo() *v1.ContactInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Centre) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Centre) GetAssignedBranchID() string {
	if x != nil {
		return x.AssignedBranchID
	}
	return ""
}

func (x *Centre) GetMeetingDay() org.Day {
	if x != nil {
		return x.MeetingDay
	}
	return org.Day(0)
}

func (x *Centre) GetState() v1.State {
	if x != nil {
		return x.State
	}
	return v1.State(0)
}

func (x *Centre) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Centre) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Centre) GetFields() *structpb.Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

// CreateCentreRequest is the request to create a new centre.
type CreateCentreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Body is the centre to create.
	Body *Centre `protobuf:"bytes,1,opt,name=Body,json=body,proto3" json:"body,omitempty"`
}

func (x *CreateCentreRequest) Reset() {
	*x = CreateCentreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCentreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCentreRequest) ProtoMessage() {}

func (x *CreateCentreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCentreRequest.ProtoReflect.Descriptor instead.
func (*CreateCentreRequest) Descriptor() ([]byte, []int) {
	return file_bnk_to_core_api_v1_centres_all_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCentreRequest) GetBody() *Centre {
	if x != nil {
		return x.Body
	}
	return nil
}

// ListCentresRequest is the request to list centres.
type ListCentresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PageToken is the page token to use for the next page.
	PageToken string `protobuf:"bytes,1,opt,name=PageToken,json=page_token,proto3" json:"page_token,omitempty"`
	// PageSize is the number of centres to return.
	PageSize int32 `protobuf:"varint,2,opt,name=PageSize,json=page_size,proto3" json:"page_size,omitempty"`
	// Filter is the filter to apply to the list.
	Filter string `protobuf:"bytes,3,opt,name=Filter,json=filter,proto3" json:"filter,omitempty"`
	// OrderBy is the field to order the list by.
	OrderBy string `protobuf:"bytes,4,opt,name=OrderBy,json=order_by,proto3" json:"order_by,omitempty"`
}

func (x *ListCentresRequest) Reset() {
	*x = ListCentresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCentresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCentresRequest) ProtoMessage() {}

func (x *ListCentresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCentresRequest.ProtoReflect.Descriptor instead.
func (*ListCentresRequest) Descriptor() ([]byte, []int) {
	return file_bnk_to_core_api_v1_centres_all_proto_rawDescGZIP(), []int{2}
}

func (x *ListCentresRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListCentresRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCentresRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListCentresRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

// ListCentresResponse is the response for listing centres.
type ListCentresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total is the total number of centres matching the filter.
	Total int32 `protobuf:"varint,1,opt,name=Total,json=total,proto3" json:"total,omitempty"`
	// Remaining is the number of centres remaining in the list, including the
	// centres in the response.
	Remaining int32 `protobuf:"varint,2,opt,name=Remaining,json=remaining,proto3" json:"remaining,omitempty"`
	// Centres is the list of centres.
	Centres []*Centre `protobuf:"bytes,3,rep,name=Centres,json=centres,proto3" json:"centres,omitempty"`
	// NextPageToken is the page token for the next page.
	NextPageToken string `protobuf:"bytes,4,opt,name=NextPageToken,json=next_page_token,proto3" json:"next_page_token,omitempty"`
}

func (x *ListCentresResponse) Reset() {
	*x = ListCentresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCentresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCentresResponse) ProtoMessage() {}

func (x *ListCentresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCentresResponse.ProtoReflect.Descriptor instead.
func (*ListCentresResponse) Descriptor() ([]byte, []int) {
	return file_bnk_to_core_api_v1_centres_all_proto_rawDescGZIP(), []int{3}
}

func (x *ListCentresResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCentresResponse) GetRemaining() int32 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *ListCentresResponse) GetCentres() []*Centre {
	if x != nil {
		return x.Centres
	}
	return nil
}

func (x *ListCentresResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// GetCentreRequest is the request to retrieve a centre.
type GetCentreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CentreID is the ID of the centre to retrieve.
	CentreID string `protobuf:"bytes,1,opt,name=CentreID,json=centre_id,proto3" json:"centre_id,omitempty"`
}

func (x *GetCentreRequest) Reset() {
	*x = GetCentreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCentreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCentreRequest) ProtoMessage() {}

func (x *GetCentreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCentreRequest.ProtoReflect.Descriptor instead.
func (*GetCentreRequest) Descriptor() ([]byte, []int) {
	return file_bnk_to_core_api_v1_centres_all_proto_rawDescGZIP(), []int{4}
}

func (x *GetCentreRequest) GetCentreID() string {
	if x != nil {
		return x.CentreID
	}
	return ""
}

// UpdateCentreRequest is the request to update a centre.
type UpdateCentreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CentreID is the ID of the centre to update.
	CentreID string `protobuf:"bytes,1,opt,name=CentreID,json=centre_id,proto3" json:"centre_id,omitempty"`
	// Body is the new value of the centre.
	Body *Centre `protobuf:"bytes,2,opt,name=Body,json=body,proto3" json:"body,omitempty"`
}

func (x *UpdateCentreRequest) Reset() {
	*x = UpdateCentreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCentreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCentreRequest) ProtoMessage() {}

func (x *UpdateCentreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCentreRequest.ProtoReflect.Descriptor instead.
func (*UpdateCentreRequest) Descriptor() ([]byte, []int) {
	return file_bnk_to_core_api_v1_centres_all_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCentreRequest) GetCentreID() string {
	if x != nil {
		return x.CentreID
	}
	return ""
}

func (x *UpdateCentreRequest) GetBody() *Centre {
	if x != nil {
		return x.Body
	}
	return nil
}

// DeleteCentreRequest is the request to delete a centre.
type DeleteCentreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CentreID is the ID of the centre to delete.
	CentreID string `protobuf:"bytes,1,opt,name=CentreID,json=centre_id,proto3" json:"centre_id,omitempty"`
}

func (x *DeleteCentreRequest) Reset() {
	*x = DeleteCentreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCentreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCentreRequest) ProtoMessage() {}

func (x *DeleteCentreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bnk_to_core_api_v1_centres_all_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCentreRequest.ProtoReflect.Descriptor instead.
func (*DeleteCentreRequest) Descriptor() ([]byte, []int) {
	return file_bnk_to_core_api_v1_centres_all_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCentreRequest) GetCentreID() string {
	if x != nil {
		return x.CentreID
	}
	return ""
}

var File_bnk_to_core_api_v1_centres_all_proto protoreflect.FileDescriptor

var file_bnk_to_core_api_v1_centres_all_proto_rawDesc = []byte{
	0x0a, 0x24, 0x62, 0x6e, 0x6b, 0x2e, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x2f, 0x61, 0x6c, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73,
	0x1a, 0x0b, 0x78, 0x6f, 0x2f, 0x78, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x62, 0x6e, 0x6b, 0x2e, 0x74, 0x6f, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x62, 0x6e, 0x6b, 0x2e, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x61, 0x6c,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x04, 0x0a, 0x06, 0x43, 0x65, 0x6e, 0x74,
	0x72, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0xda, 0x47, 0x02, 0x08, 0x02, 0x52, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x5f, 0x69, 0x64,
	0x12, 0x3d, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x20, 0x0a, 0x05, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x12, 0x58, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0xda, 0x47, 0x1d, 0x2a, 0x1b, 0x0a, 0x0f, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x08, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x44, 0x52, 0x12, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x0a, 0x4d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x44, 0x61, 0x79, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0b, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x64, 0x61, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a,
	0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x50, 0x00, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x3a, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x50, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x3a, 0x06, 0x08, 0x00,
	0x10, 0x00, 0x18, 0x00, 0x22, 0x5f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x65,
	0x6e, 0x74, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x42,
	0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e,
	0x74, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x42, 0x0a, 0x08, 0x00, 0x18,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x3a, 0x06, 0x08,
	0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xbb, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65,
	0x6e, 0x74, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x09,
	0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x22, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x3a, 0x06, 0x08, 0x00, 0x10,
	0x00, 0x18, 0x00, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x6e, 0x74,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a,
	0x09, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x09, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x07, 0x43, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62,
	0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x65, 0x73, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x0d, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00,
	0x50, 0x00, 0x52, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x43, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x08, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x09, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00,
	0x22, 0x88, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x43, 0x65, 0x6e, 0x74,
	0x72, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x12, 0x40, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0x46, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x52, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x3a, 0x06, 0x08, 0x00, 0x10,
	0x00, 0x18, 0x00, 0x32, 0xbf, 0x05, 0x0a, 0x0e, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x12, 0x2d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65,
	0x73, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x22, 0x1f, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x0b, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x28, 0x00, 0x30, 0x00, 0x12, 0x89, 0x01,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x12, 0x2c, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x6e,
	0x74, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x88, 0x02, 0x00, 0x90,
	0x02, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65,
	0x6e, 0x74, 0x72, 0x65, 0x73, 0x28, 0x00, 0x30, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x12, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x2e, 0x43,
	0x65, 0x6e, 0x74, 0x72, 0x65, 0x22, 0x24, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73,
	0x2f, 0x7b, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x49, 0x44, 0x7d, 0x28, 0x00, 0x30, 0x00, 0x12,
	0x8f, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65,
	0x12, 0x2d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x22, 0x2a, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a,
	0x04, 0x42, 0x6f, 0x64, 0x79, 0x1a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x73, 0x2f, 0x7b, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x49, 0x44, 0x7d, 0x28, 0x00, 0x30,
	0x00, 0x12, 0x7d, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x12, 0x2d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x65, 0x73, 0x2f, 0x7b, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x49, 0x44, 0x7d, 0x28, 0x00,
	0x1a, 0x03, 0x88, 0x02, 0x00, 0x42, 0x95, 0x01, 0x0a, 0x18, 0x6f, 0x70, 0x65, 0x6e, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x73, 0x48, 0x01, 0x50, 0x01, 0x5a, 0x22, 0x62, 0x6e, 0x6b, 0x2e, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x73, 0x3b, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x65, 0x73, 0x80, 0x01, 0x00, 0x88, 0x01, 0x00,
	0x90, 0x01, 0x00, 0xb8, 0x01, 0x00, 0xd8, 0x01, 0x00, 0xf8, 0x01, 0x01, 0xd0, 0x02, 0x00, 0x92,
	0x41, 0x3b, 0x0a, 0x03, 0x32, 0x2e, 0x30, 0x12, 0x0d, 0x0a, 0x07, 0x43, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x73, 0x32, 0x02, 0x76, 0x31, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bnk_to_core_api_v1_centres_all_proto_rawDescOnce sync.Once
	file_bnk_to_core_api_v1_centres_all_proto_rawDescData = file_bnk_to_core_api_v1_centres_all_proto_rawDesc
)

func file_bnk_to_core_api_v1_centres_all_proto_rawDescGZIP() []byte {
	file_bnk_to_core_api_v1_centres_all_proto_rawDescOnce.Do(func() {
		file_bnk_to_core_api_v1_centres_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_bnk_to_core_api_v1_centres_all_proto_rawDescData)
	})
	return file_bnk_to_core_api_v1_centres_all_proto_rawDescData
}

var (
	file_bnk_to_core_api_v1_centres_all_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
	file_bnk_to_core_api_v1_centres_all_proto_goTypes  = []interface{}{
		(*Centre)(nil),                // 0: openbank.core.v1.centres.Centre
		(*CreateCentreRequest)(nil),   // 1: openbank.core.v1.centres.CreateCentreRequest
		(*ListCentresRequest)(nil),    // 2: openbank.core.v1.centres.ListCentresRequest
		(*ListCentresResponse)(nil),   // 3: openbank.core.v1.centres.ListCentresResponse
		(*GetCentreRequest)(nil),      // 4: openbank.core.v1.centres.GetCentreRequest
		(*UpdateCentreRequest)(nil),   // 5: openbank.core.v1.centres.UpdateCentreRequest
		(*DeleteCentreRequest)(nil),   // 6: openbank.core.v1.centres.DeleteCentreRequest
		(*v1.ContactInfo)(nil),        // 7: openbank.core.v1.ContactInfo
		(org.Day)(0),                  // 8: openbank.core.v1.org.Day
		(v1.State)(0),                 // 9: openbank.core.v1.State
		(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
		(*structpb.Value)(nil),        // 11: google.protobuf.Value
		(*emptypb.Empty)(nil),         // 12: google.protobuf.Empty
	}
)

var file_bnk_to_core_api_v1_centres_all_proto_depIdxs = []int32{
	7,  // 0: openbank.core.v1.centres.Centre.Info:type_name -> openbank.core.v1.ContactInfo
	8,  // 1: openbank.core.v1.centres.Centre.MeetingDay:type_name -> openbank.core.v1.org.Day
	9,  // 2: openbank.core.v1.centres.Centre.State:type_name -> openbank.core.v1.State
	10, // 3: openbank.core.v1.centres.Centre.CreateTime:type_name -> google.protobuf.Timestamp
	10, // 4: openbank.core.v1.centres.Centre.UpdateTime:type_name -> google.protobuf.Timestamp
	11, // 5: openbank.core.v1.centres.Centre.Fields:type_name -> google.protobuf.Value
	0,  // 6: openbank.core.v1.centres.CreateCentreRequest.Body:type_name -> openbank.core.v1.centres.Centre
	0,  // 7: openbank.core.v1.centres.ListCentresResponse.Centres:type_name -> openbank.core.v1.centres.Centre
	0,  // 8: openbank.core.v1.centres.UpdateCentreRequest.Body:type_name -> openbank.core.v1.centres.Centre
	1,  // 9: openbank.core.v1.centres.CentresService.CreateCentre:input_type -> openbank.core.v1.centres.CreateCentreRequest
	2,  // 10: openbank.core.v1.centres.CentresService.ListCentres:input_type -> openbank.core.v1.centres.ListCentresRequest
	4,  // 11: openbank.core.v1.centres.CentresService.GetCentre:input_type -> openbank.core.v1.centres.GetCentreRequest
	5,  // 12: openbank.core.v1.centres.CentresService.UpdateCentre:input_type -> openbank.core.v1.centres.UpdateCentreRequest
	6,  // 13: openbank.core.v1.centres.CentresService.DeleteCentre:input_type -> openbank.core.v1.centres.DeleteCentreRequest
	0,  // 14: openbank.core.v1.centres.CentresService.CreateCentre:output_type -> openbank.core.v1.centres.Centre
	3,  // 15: openbank.core.v1.centres.CentresService.ListCentres:output_type -> openbank.core.v1.centres.ListCentresResponse
	0,  // 16: openbank.core.v1.centres.CentresService.GetCentre:output_type -> openbank.core.v1.centres.Centre
	0,  // 17: openbank.core.v1.centres.CentresService.UpdateCentre:output_type -> openbank.core.v1.centres.Centre
	12, // 18: openbank.core.v1.centres.CentresService.DeleteCentre:output_type -> google.protobuf.Empty
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_bnk_to_core_api_v1_centres_all_proto_init() }
func file_bnk_to_core_api_v1_centres_all_proto_init() {
	if File_bnk_to_core_api_v1_centres_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bnk_to_core_api_v1_centres_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Centre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bnk_to_core_api_v1_centres_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCentreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bnk_to_core_api_v1_centres_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCentresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bnk_to_core_api_v1_centres_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCentresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bnk_to_core_api_v1_centres_all_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCentreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bnk_to_core_api_v1_centres_all_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCentreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bnk_to_core_api_v1_centres_all_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCentreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bnk_to_core_api_v1_centres_all_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bnk_to_core_api_v1_centres_all_proto_goTypes,
		DependencyIndexes: file_bnk_to_core_api_v1_centres_all_proto_depIdxs,
		MessageInfos:      file_bnk_to_core_api_v1_centres_all_proto_msgTypes,
	}.Build()
	File_bnk_to_core_api_v1_centres_all_proto = out.File
	file_bnk_to_core_api_v1_centres_all_proto_rawDesc = nil
	file_bnk_to_core_api_v1_centres_all_proto_goTypes = nil
	file_bnk_to_core_api_v1_centres_all_proto_depIdxs = nil
}
