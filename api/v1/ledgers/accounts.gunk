package ledgers

import (
	"github.com/gunk/opt/file/java"
	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"
	"github.com/gunk/opt/proto"
)

// CreateAccountRequest is the request to create a new GL account.
type CreateAccountRequest struct {
	// Body is the details of the GL account to create.
	Body Account `pb:"1" json:"body"`
}

// ListAccountsRequest is the request to list GL accounts.
type ListAccountsRequest struct {
	// PageToken is the page token to use for the request.
	PageToken string `pb:"1" json:"page_token"`
	// PageSize is the page size to use for the request.
	PageSize int `pb:"2" json:"page_size"`
	// OrderBy is the field to order the results by.
	OrderBy string `pb:"3" json:"order_by"`
	// Filter is the filter to use for the request.
	Filter string `pb:"4" json:"filter"`
}

// ListAccountsResponse is the response for listing GL accounts.
type ListAccountsResponse struct {
	// Total is the total number of accounts matching the filter.
	Total int `pb:"1" json:"total"`
	// Remaining is the number of accounts remaining in the list, including the
	// accounts in the response.
	Remaining int `pb:"2" json:"remaining"`
	// Accounts is the list of GL accounts.
	Accounts []Account `pb:"3" json:"accounts"`
	// NextPageToken is the next page token to use for the request.
	NextPageToken string `pb:"4" json:"next_page_token"`
}

// GetAccountRequest is the request to retrieve a GL account.
type GetAccountRequest struct {
	// AccountID is the ID of the GL account to retrieve.
	AccountID string `pb:"1" json:"account_id"`
}

// AccountsService is the service for managing GL accounts.
type AccountsService interface {
	// CreateAccount creates a new GL account.
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/ledgers/accounts",
	//         Body:   "Body",
	// }
	CreateAccount(CreateAccountRequest) Account

	// ListAccounts lists GL accounts.
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/ledgers/accounts",
	// }
	ListAccounts(ListAccountsRequest) ListAccountsResponse

	// GetAccount retrieves a GL account.
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/ledgers/accounts/{AccountID}",
	// }
	GetAccount(GetAccountRequest) Account
}
