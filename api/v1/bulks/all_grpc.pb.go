// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: bnk.to/core/api/v1/bulks/all.proto

package bulks

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BulksServiceClient is the client API for BulksService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BulksServiceClient interface {
	// GetBulks gets the status for a bulk process.
	GetBulks(ctx context.Context, in *GetBulksRequest, opts ...grpc.CallOption) (*GetBulksResponse, error)
}

type bulksServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBulksServiceClient(cc grpc.ClientConnInterface) BulksServiceClient {
	return &bulksServiceClient{cc}
}

func (c *bulksServiceClient) GetBulks(ctx context.Context, in *GetBulksRequest, opts ...grpc.CallOption) (*GetBulksResponse, error) {
	out := new(GetBulksResponse)
	err := c.cc.Invoke(ctx, "/openbank.core.v1.bulks.BulksService/GetBulks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BulksServiceServer is the server API for BulksService service.
// All implementations must embed UnimplementedBulksServiceServer
// for forward compatibility
type BulksServiceServer interface {
	// GetBulks gets the status for a bulk process.
	GetBulks(context.Context, *GetBulksRequest) (*GetBulksResponse, error)
	mustEmbedUnimplementedBulksServiceServer()
}

// UnimplementedBulksServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBulksServiceServer struct{}

func (UnimplementedBulksServiceServer) GetBulks(context.Context, *GetBulksRequest) (*GetBulksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBulks not implemented")
}
func (UnimplementedBulksServiceServer) mustEmbedUnimplementedBulksServiceServer() {}

// UnsafeBulksServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BulksServiceServer will
// result in compilation errors.
type UnsafeBulksServiceServer interface {
	mustEmbedUnimplementedBulksServiceServer()
}

func RegisterBulksServiceServer(s grpc.ServiceRegistrar, srv BulksServiceServer) {
	s.RegisterService(&BulksService_ServiceDesc, srv)
}

func _BulksService_GetBulks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBulksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BulksServiceServer).GetBulks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openbank.core.v1.bulks.BulksService/GetBulks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BulksServiceServer).GetBulks(ctx, req.(*GetBulksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BulksService_ServiceDesc is the grpc.ServiceDesc for BulksService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BulksService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "openbank.core.v1.bulks.BulksService",
	HandlerType: (*BulksServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBulks",
			Handler:    _BulksService_GetBulks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bnk.to/core/api/v1/bulks/all.proto",
}
