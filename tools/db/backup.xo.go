// Package db contains generated code from xo.
package db

// Code generated by xo. DO NOT EDIT.

import (
	"context"
	"time"

	timestamppb "google.golang.org/protobuf/types/known/timestamppb"

	"bnk.to/core/api/v1/backups"
)

// Backup represents a row from 'backups'.
type Backup struct {
	ID           int32     `json:"id"`            // id
	BackupID     string    `json:"backup_id"`     // backup_id
	Status       Status    `json:"status"`        // status
	CreateTime   time.Time `json:"create_time"`   // create_time
	CompleteTime time.Time `json:"complete_time"` // complete_time
	// xo fields
	Exists, Deleted bool
}

func NewBackup(pb *backups.Backup) (Backup, error) {
	if pb == nil {
		return Backup{}, ErrNilType{"Backup"}
	}
	b := Backup{
		BackupID:     pb.BackupID,
		Status:       NewStatus(pb.Status),
		CreateTime:   pb.CreateTime.AsTime(),
		CompleteTime: pb.CompleteTime.AsTime(),
	}
	return b, nil
}

func (b Backup) PB() (*backups.Backup, error) {
	pb := &backups.Backup{
		BackupID:     b.BackupID,
		Status:       b.Status.PB(),
		CreateTime:   timestamppb.New(b.CreateTime),
		CompleteTime: timestamppb.New(b.CompleteTime),
	}
	return pb, nil
}

type BackupRepository interface {
	InsertBackup(context.Context, *Backup) error
	ListBackups(context.Context, string, int32, string, *ListPosition) (ListStat, []*Backup, *ListPosition, error)

	// From backups_pkey
	BackupByID(context.Context, int32) (*Backup, error)

	UpdateBackupByID(context.Context, *Backup) error
	DeleteBackupByID(context.Context, int32) error

	// From backups_backup_id_idx
	BackupByBackupID(context.Context, string) (*Backup, error)

	UpdateBackupByBackupID(context.Context, *Backup) error
	DeleteBackupByBackupID(context.Context, string) error
}
