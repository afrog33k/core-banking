// Package db contains generated code from xo.
package db

// Code generated by xo. DO NOT EDIT.

import (
	"context"
	"database/sql"

	"bnk.to/core/api/v1/org"
)

// OrgDefault represents a row from 'org_defaults'.
type OrgDefault struct {
	ID                   int32          `json:"id"`                     // id
	ClientRoleID         sql.NullString `json:"client_role_id"`         // client_role_id
	ClientState          State          `json:"client_state"`           // client_state
	GroupRoleID          sql.NullString `json:"group_role_id"`          // group_role_id
	LineOfCreditState    State          `json:"line_of_credit_state"`   // line_of_credit_state
	TransactionChannelID sql.NullString `json:"transaction_channel_id"` // transaction_channel_id
	// xo fields
	Exists, Deleted bool
}

func NewOrgDefault(pb *org.Defaults) (OrgDefault, error) {
	if pb == nil {
		return OrgDefault{}, ErrNilType{"OrgDefault"}
	}
	od := OrgDefault{
		ClientRoleID:         toNullString(pb.ClientRoleID),
		ClientState:          NewState(pb.ClientState),
		GroupRoleID:          toNullString(pb.GroupRoleID),
		LineOfCreditState:    NewState(pb.LineOfCreditState),
		TransactionChannelID: toNullString(pb.TransactionChannelID),
	}
	return od, nil
}

func (od OrgDefault) PB() (*org.Defaults, error) {
	pb := &org.Defaults{
		ClientRoleID:         toStringPB(od.ClientRoleID),
		ClientState:          od.ClientState.PB(),
		GroupRoleID:          toStringPB(od.GroupRoleID),
		LineOfCreditState:    od.LineOfCreditState.PB(),
		TransactionChannelID: toStringPB(od.TransactionChannelID),
	}
	return pb, nil
}

type OrgDefaultRepository interface {
	InsertOrgDefault(context.Context, *OrgDefault) error
	ListOrgDefaults(context.Context, string, int32, string, *ListPosition) (ListStat, []*OrgDefault, *ListPosition, error)

	// From org_defaults_pkey
	OrgDefaultByID(context.Context, int32) (*OrgDefault, error)

	UpdateOrgDefaultByID(context.Context, *OrgDefault) error
	DeleteOrgDefaultByID(context.Context, int32) error
}
