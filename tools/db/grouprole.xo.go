// Package db contains generated code from xo.
package db

// Code generated by xo. DO NOT EDIT.

import (
	"context"

	"bnk.to/core/api/v1/groups"
)

// GroupRole represents a row from 'group_roles'.
type GroupRole struct {
	ID     int32  `json:"id"`      // id
	RoleID string `json:"role_id"` // role_id
	Name   string `json:"name"`    // name
	// xo fields
	Exists, Deleted bool
}

func NewGroupRole(pb *groups.Role) (GroupRole, error) {
	if pb == nil {
		return GroupRole{}, ErrNilType{"GroupRole"}
	}
	gr := GroupRole{
		RoleID: pb.RoleID,
		Name:   pb.Name,
	}
	return gr, nil
}

func (gr GroupRole) PB() (*groups.Role, error) {
	pb := &groups.Role{
		RoleID: gr.RoleID,
		Name:   gr.Name,
	}
	return pb, nil
}

type GroupRoleRepository interface {
	InsertGroupRole(context.Context, *GroupRole) error
	ListGroupRoles(context.Context, string, int32, string, *ListPosition) (ListStat, []*GroupRole, *ListPosition, error)

	// From group_roles_pkey
	GroupRoleByID(context.Context, int32) (*GroupRole, error)

	UpdateGroupRoleByID(context.Context, *GroupRole) error
	DeleteGroupRoleByID(context.Context, int32) error

	// From group_roles_role_id_idx
	GroupRoleByRoleID(context.Context, string) (*GroupRole, error)

	UpdateGroupRoleByRoleID(context.Context, *GroupRole) error
	DeleteGroupRoleByRoleID(context.Context, string) error
}
