// Package db contains generated code from xo.
package db

// Code generated by xo. DO NOT EDIT.

import (
	"context"
	"time"

	timestamppb "google.golang.org/protobuf/types/known/timestamppb"

	"bnk.to/core/api/v1/org"
)

// OrgHoliday represents a row from 'org_holidays'.
type OrgHoliday struct {
	ID                  int32     `json:"id"`                    // id
	HolidayID           string    `json:"holiday_id"`            // holiday_id
	Name                string    `json:"name"`                  // name
	Date                time.Time `json:"date"`                  // date
	IsAnnuallyRecurring bool      `json:"is_annually_recurring"` // is_annually_recurring
	CreateTime          time.Time `json:"create_time"`           // create_time
	// xo fields
	Exists, Deleted bool
}

func NewOrgHoliday(pb *org.Holiday) (OrgHoliday, error) {
	if pb == nil {
		return OrgHoliday{}, ErrNilType{"OrgHoliday"}
	}
	oh := OrgHoliday{
		HolidayID:           pb.HolidayID,
		Name:                pb.Name,
		Date:                pb.Date.AsTime(),
		IsAnnuallyRecurring: pb.IsAnnuallyRecurring,
		CreateTime:          pb.CreateTime.AsTime(),
	}
	return oh, nil
}

func (oh OrgHoliday) PB() (*org.Holiday, error) {
	pb := &org.Holiday{
		HolidayID:           oh.HolidayID,
		Name:                oh.Name,
		Date:                timestamppb.New(oh.Date),
		IsAnnuallyRecurring: oh.IsAnnuallyRecurring,
		CreateTime:          timestamppb.New(oh.CreateTime),
	}
	return pb, nil
}

type OrgHolidayRepository interface {
	InsertOrgHoliday(context.Context, *OrgHoliday) error
	ListOrgHolidays(context.Context, string, int32, string, *ListPosition) (ListStat, []*OrgHoliday, *ListPosition, error)

	// From org_holidays_pkey
	OrgHolidayByID(context.Context, int32) (*OrgHoliday, error)

	UpdateOrgHolidayByID(context.Context, *OrgHoliday) error
	DeleteOrgHolidayByID(context.Context, int32) error

	// From org_holidays_holiday_id_idx
	OrgHolidayByHolidayID(context.Context, string) (*OrgHoliday, error)

	UpdateOrgHolidayByHolidayID(context.Context, *OrgHoliday) error
	DeleteOrgHolidayByHolidayID(context.Context, string) error
}
